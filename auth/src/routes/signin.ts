import express, { Request, Response } from 'express';
import { body } from 'express-validator';
import { validateRequest, BadRequestError } from '@udemy-ts-tickets/common';
import jwt from 'jsonwebtoken';

import { User } from '../models/user';
import { Password } from './../utils/password';

const router = express.Router();

router.post(
  '/api/users/signin',
  [
    body('email').isEmail().withMessage('Email must be valid.'),
    body('password').trim().notEmpty().withMessage('You must supply a password.'),
  ],
  validateRequest,
  async (req: Request, res: Response) => {
    const { email, password } = req.body;
    const existingUser = await User.findOne({ email });
    if (!existingUser) {
      throw new BadRequestError('Invalid credentials');
    }
    const isCorrectPassword = await Password.compare(existingUser.password, password);
    if (!isCorrectPassword) {
      throw new BadRequestError('Invalid credentials');
    }
    // generate jwt
    const userJwt = jwt.sign(
      {
        id: existingUser.id,
        email: existingUser.email,
      },
      process.env.JWT_KEY!,
    );

    // store jwt on session property, generated by the cookieSession library on index.ts
    req.session = { jwt: userJwt };
    res.send({ message: "You're logged in" });
  },
);

export { router as signinRouter };
